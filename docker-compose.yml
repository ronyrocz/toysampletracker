
version: '3.8'

services:
  nginx-proxy:
    image: nginx:latest
    container_name: nginx-proxy
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf  # Mount main Nginx config
      - ./upstream.conf:/etc/nginx/upstream.conf  # Mount the upstream config
    ports:
      - "80:80"
    depends_on:
      - toysampletracker_blue
      - toysampletracker_green
    networks:
      - app_network

  toysampletracker_blue:
    image: toysampletracker:latest
    container_name: toysampletracker_blue
    build:
      context: .
      args:
        JAR_FILE: target/toysampletracker-*.jar
    ports:
      - "8081:8080"  # Map to a different host port
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/toysampletracker
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
    depends_on:
      - postgres
    networks:
      - app_network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/actuator/health" ]
      interval: 5s
      retries: 3
      start_period: 10s
      timeout: 3s

  toysampletracker_green:
    image: toysampletracker:latest
    container_name: toysampletracker_green
    build:
      context: .
      args:
        JAR_FILE: target/toysampletracker-*.jar
    ports:
      - "8082:8080"  # Map to a different host port
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/toysampletracker
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
    depends_on:
      - postgres
    networks:
      - app_network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/actuator/health" ]
      interval: 5s
      retries: 3
      start_period: 10s
      timeout: 3s

  postgres:
    image: postgres:15
    container_name: postgres-db
    restart: always
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=toysampletracker
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    networks:
      - app_network
    volumes:
      - postgres_data:/var/lib/postgresql/data

networks:
  app_network:
    driver: bridge

volumes:
  postgres_data: